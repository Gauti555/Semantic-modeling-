# -*- coding: utf-8 -*-
"""cosine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pwg6yX_gK1xF6nBSLG-COtMToOZuOR3B
"""

pip install sentence_transformers

from sentence_transformers import SentenceTransformer
import scipy.spatial as sc
import pandas as pd
import re

embedder = SentenceTransformer('distilbert-base-nli-mean-tokens')

from google.colab import drive

drive.mount("/content/drive")

df = pd.read_json(r'/content/drive/My Drive/file.json /ArticleDataset.json')
df.drop_duplicates(subset = 2, keep='first', inplace= True)
df.reset_index(inplace=True)

sentence = []
tidysentence=[]

for i in range(len(df)):
    st = df[2][i]
    tidysentence.append(st)
    st = re.sub('[^a-zA-z0-9\s]','',st)
    st = '.'.join(st.rsplit('\n'))
    sentence.append(st)

len(sentence)

sentence_embb = embedder.encode(sentence)

query = [str(input('Enter the query:'))]
Closest = int(input("Enter Number"))

query_embb = embedder.encode(query)

res = []
score = []
for que, que_embb in zip(query,query_embb):
  distance = sc.distance.cdist([que_embb], sentence_embb,'cosine')[0]
  result = zip(range(len(distance)), distance)
  result = sorted(result, key=lambda x: x[1])
  
  for ide, leng in result[0:Closest]:
    score.append(1-leng)
    Parag = sentence[ide]
    #print(score)
    #print(Parag)
    res.append(df.iloc[ide])
csv_result = pd.DataFrame(res)

final_res = pd.DataFrame()
final_res["Results"] = csv_result[2]
final_res["URL"] = csv_result[3]
final_res['cosine_Scores'] = pd.Series(score, index=final_res.index)
final_res.to_csv(query[0]+'with_cosine_similarity.csv')

